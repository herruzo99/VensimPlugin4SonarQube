{UTF-8}
action=
	0
	~	dmnl [0,4,1]
	~	action to take with 0 meaning sum, 1 product, 2 minimum, 3 maximum and 4 \
		average
	|

count of neighbors[x,y]= INITIAL(
	VECTOR SELECT(adjacency matrix[x,y,xp!,yp!],
	           one neighbor[xp!,yp!],:NA:,VS SUM,VS ERR AT LEAST ONE) + 
	  VECTOR SELECT(edge matrix[x,y,edge!],
	           one edge[edge!],0,VS SUM,VS ERR NONE))
	~	dmnl
	~		|

edge temp[edge]=
	250,350,300,300
	~	Kelvin
	~		|

effect of pollution deaths by age group[AgeGroup]=
	1+AgeGroup/10
	~	dmnl
	~		|

error setting=
	0
	~	dmnl [0,3,1]
	~	How to treat too many or too few entries in the selection. If err is 0 \
		then no errors are raised; if err is 1 then a floating point error is \
		raised if sarray has no nonzero elements in the computation being \
		performed (that is a zero row or a zero column); if err is 2 then an error \
		is raised is more than one element is included; if err is 3 then both no \
		and more than one element raise an error.
	|

Init Temp=
	300
	~	Kelvin
	~		|

input[x]=
	1,2,3,4,5
	~	widgets
	~		|

MISSING VAL 0==
	0
	~	Kelvin
	~		|

MISSING VAL 1=
	1
	~	dmnl
	~		|

MISSING VAL NA==
	:NA:
	~	Kelvin
	~		|

missing value=
	0
	~	widgets
	~	Value to use in the case where there are only 0s in the selection.
	|

one edge[edge]=
	1
	~	dmnl
	~		|

one neighbor[x,y]=
	1
	~	dmnl
	~		|

output[y]=
	VECTOR SELECT(selection[x!,y], input[x!] , missing value , action , error setting )
	~	widgets
	~		|

population[Age]=
	1e+006/ELMCOUNT(Age)
	~	people
	~		|

selection[x,y]==
	1,0,1,0,1,0;
	0,1,0,1,0,1;
	0,0,1,0,1,0;
	0,0,0,1,0,1;
	0,0,0,0,1,0;
	~	dmnl
	~	Selection array for mapping of input to output. Normally, a large number \
		of 0’s and a relatively small number of 1’s or other non-zero values. \
		(If the matrix is fully populated - all 1s - it's generally easier to use \
		SUM, PROD, etc.
	|

task is complete[task]=
	STEP(1,task*unit time)
	~	dmnl
	~		|

temp[x,y]= INTEG (
	Temp Change Rate[x,y],
		Init Temp)
	~	Kelvin
	~		|

Temp Change Rate[x,y]=
	average adjacent temp diff[x,y]/Time Constant
	~	Kelvin/Month
	~		|

Time Constant=
	1
	~	Month
	~	Note: the time constant here is a bit notional; it subsumes concepts of \
		conductivity, heat capacity, etc.
	|

unit time=
	1
	~	Month
	~		|

VS ERR AT LEAST ONE==
	1
	~	dmnl
	~		|

VS ERR EXACTLY ONE==
	3
	~	dmnl
	~		|

VS ERR NONE==
	0
	~	dmnl
	~		|

VS MIN=
	0
	~	dmnl
	~		|

VS PROD==
	1
	~	dmnl
	~		|

VS SUM==
	0
	~	dmnl
	~		|

********************************************************
	.HeatTransfer
********************************************************~
	|

x:
	(x1-x5)
	~	
	~		|

y:
	(y1-y6)
	~	
	~		|

edge : left,right,top,bottom
	~	
	~		|

xp <-> x
	~	
	~		|

yp <-> y
	~	
	~		|

average adjacent temp diff[x,y]=
	( VECTOR SELECT(adjacency matrix[x,y,xp!,yp!],
	           temp[xp!,yp!]-temp[x,y],MISSING VAL NA,VS SUM,VS ERR AT LEAST ONE) + 
	  VECTOR SELECT(edge matrix[x,y,edge!],
	           edge temp[edge!]-temp[x,y],MISSING VAL 0,VS SUM,VS ERR NONE)
	       ) / 4
	~	Kelvin
	~		|

adjacency matrix[x,y,xp,yp] = INITIAL(
 IF THEN ELSE((yp = y+1 :AND: xp = x) :OR:
              (yp = y-1 :AND: xp = x) :OR:
              (xp = x+1 :AND: yp = y) :OR:
              (xp = x-1 :AND: yp = y),
              1,0))
	~	dmnl
	~	Identifies the neighborhood of an [x,y] location.
	|

edge matrix[x,y,edge] = INITIAL(
 IF THEN ELSE((y = 1 :AND: edge = top) :OR:
              (y = ELMCOUNT(y) :AND: edge = bottom) :OR:
              (x = 1 :AND: edge = left) :OR:
              (x = ELMCOUNT(x) :AND: edge = right),
              1,0))
	~	dmnl
	~	Identifies the edge relations of an [x,y] cell.
	|

********************************************************
	.Quality
********************************************************~
	|

task quality[task] = work quality[task] * prereq quality[task]
	~	dmnl
	~		|

work quality[task] = 0.8,0.9,0.7,0.9
	~	dmnl
	~		|

prereq quality[task]=
	VECTOR SELECT(
	prereq map[task,prereq!],
	task quality[prereq!],MISSING VAL 1,VS PROD,VS ERR NONE)
	~	dmnl
	~		|

********************************************************
	.Prerequisites
********************************************************~
	|

task : t1,t2,t3,t4
	~	
	~		|

prereq <-> task
	~	
	~		|

prereq map[task,prereq] == 
0,0,0,0;
1,0,0,0;
1,1,0,0;
0,0,1,0;
	~	dmnl
	~		|

prereqs are complete[task]=
	VECTOR SELECT(
	prereq map[task,prereq!],
	task is complete[prereq!],MISSING VAL 1,VS MIN,VS ERR NONE)
	~	dmnl
	~		|

********************************************************
	.Aggregation
********************************************************~
	|

effect of pollution deaths by age[Age]=
	VECTOR SELECT(
	age grouping map[AgeGroup!,Age],
	effect of pollution deaths by age group[AgeGroup!],
	:NA:,VS SUM,VS ERR EXACTLY ONE)
	~	dmnl
	~	Mapping from a parameter specified in aggregate (effect of pollution \
		deaths by age group[AgeGroup]) to detailed effects (effect of pollution \
		deaths by age[Age])
	|

Age : a1,a2,a3,a4,a5,a6
	~	
	~		|

AgeGroup : ag1,ag2,ag3
	~	
	~		|

age grouping map[AgeGroup,Age] = 
1,1,0,0,0,0;
0,0,1,1,0,0;
0,0,0,0,1,1;
	~	dmnl
	~	Relationship of ages to age groups
	|

population grouped[AgeGroup]=
	VECTOR SELECT(
	age grouping map[AgeGroup,Age!],
	population[Age!],
	:NA:,VS SUM,VS ERR AT LEAST ONE)
	~	people
	~	Mapping from detail (population[Age]) to aggregate (population \
		grouped[AgeGroup])
	|

********************************************************
	.Control
********************************************************~
		Simulation Control Parameters
	|

FINAL TIME  = 10
	~	Month
	~	The final time for the simulation.
	|

INITIAL TIME  = 0
	~	Month
	~	The initial time for the simulation.
	|

SAVEPER  = 
        TIME STEP 
	~	Month [0,?]
	~	The frequency with which output is stored.
	|

TIME STEP  = 0.25
	~	Month [0,?]
	~	The time step for the simulation.
	|

\\\---/// Sketch information - do not modify anything except names
V300  Do not put anything below this section - it will be ignored
*View 1
$192-192-192,0,Arial|10||0-0-0|0-0-0|0-0-255|-1--1--1|-1--1--1|96,96,100,0
10,1,adjacency matrix,555,695,52,9,8,3,0,0,-1,0,0,0
10,2,age grouping map,285,340,54,9,8,3,0,0,-1,0,0,0
10,3,average adjacent temp diff,440,740,59,16,8,3,0,16,-1,0,0,0,0-0-0,0-0-0,|0|B|0-0-0
1,4,1,3,0,0,0,0,0,0,0,-1--1--1,,1|(512,711)|
10,5,edge matrix,575,805,36,9,8,3,0,0,-1,0,0,0
1,6,5,3,0,0,0,0,0,0,0,-1--1--1,,1|(521,779)|
10,7,edge temp,480,840,33,9,8,3,0,0,-1,0,0,0
1,8,7,3,0,0,0,0,0,0,0,-1--1--1,,1|(464,799)|
10,9,temp,325,810,40,20,3,3,0,0,-1,0,0,0
1,10,9,3,1,0,0,0,0,0,0,-1--1--1,,1|(397,789)|
10,11,effect of pollution deaths by age,200,405,59,16,8,3,0,16,-1,0,0,0,0-0-0,0-0-0,|0|B|0-0-0
1,12,2,11,0,0,0,0,0,0,0,-1--1--1,,1|(252,364)|
10,13,effect of pollution deaths by age group,200,475,62,16,8,3,0,0,-1,0,0,0
1,14,13,11,0,0,0,0,0,0,0,-1--1--1,,1|(200,447)|
10,15,population,370,480,32,9,8,3,0,0,-1,0,0,0
10,16,population grouped,370,405,36,16,8,3,0,16,-1,0,0,0,0-0-0,0-0-0,|0|B|0-0-0
1,17,2,16,0,0,0,0,0,0,0,-1--1--1,,1|(316,364)|
1,18,15,16,0,0,0,0,0,0,0,-1--1--1,,1|(370,453)|
10,19,prereq map,855,295,35,9,8,3,0,0,-1,0,0,0
10,20,prereq quality,918,364,47,9,8,3,0,16,-1,0,0,0,0-0-0,0-0-0,|0|B|0-0-0
1,21,19,20,0,0,0,0,0,0,0,-1--1--1,,1|(881,324)|
10,22,task quality,920,430,36,9,8,3,0,0,-1,0,0,0
1,23,22,20,1,0,0,0,0,0,0,-1--1--1,,1|(930,400)|
1,24,20,22,1,0,0,0,0,0,0,-1--1--1,,1|(905,388)|
10,25,work quality,920,490,37,9,8,3,0,0,-1,0,0,0
1,26,25,22,0,0,0,0,0,0,0,-1--1--1,,1|(920,467)|
10,27,prereqs are complete,785,380,39,16,8,3,0,16,-1,0,0,0,0-0-0,0-0-0,|0|B|0-0-0
1,28,19,27,0,0,0,0,0,0,0,-1--1--1,,1|(827,328)|
10,29,task is complete,785,465,50,9,8,3,0,0,-1,0,0,0
1,30,29,27,0,0,0,0,0,0,0,-1--1--1,,1|(785,433)|
12,31,48,136,811,10,8,0,3,0,0,-1,0,0,0
1,32,33,31,100,0,0,22,0,0,0,-1--1--1,,1|(177,811)|
11,33,0,215,811,6,8,34,3,0,0,1,0,0,0
10,34,Temp Change Rate,215,828,58,9,40,3,0,0,-1,0,0,0
1,35,3,33,1,0,0,0,0,64,0,-1--1--1,,1|(260,732)|
10,36,Init Temp,325,885,29,9,8,3,0,0,-1,0,0,0
1,37,36,9,0,0,0,0,0,64,1,-1--1--1,,1|(325,860)|
1,38,33,9,4,0,0,22,0,64,0,-1--1--1,,1|(253,811)|
10,39,Time Constant,120,875,44,9,8,3,0,0,-1,0,0,0
1,40,39,34,0,0,0,0,0,64,0,-1--1--1,,1|(160,854)|
10,41,unit time,785,520,27,9,8,3,0,0,-1,0,0,0
1,42,41,29,0,0,0,0,0,64,0,-1--1--1,,1|(785,499)|
10,43,MISSING VAL 0,485,615,49,9,8,3,0,0,-1,0,0,0
1,44,43,3,0,0,0,0,0,64,0,-1--1--1,,1|(465,667)|
10,45,MISSING VAL NA,370,635,55,9,8,3,0,0,-1,0,0,0
1,46,45,3,0,0,0,0,0,64,0,-1--1--1,,1|(398,678)|
10,47,VS ERR AT LEAST ONE,640,770,39,16,8,3,0,0,-1,0,0,0
1,48,47,3,0,0,0,0,0,64,0,-1--1--1,,1|(556,757)|
10,49,VS ERR NONE,635,735,47,9,8,3,0,0,-1,0,0,0
1,50,49,3,0,0,0,0,0,64,0,-1--1--1,,1|(550,736)|
10,51,VS SUM,520,655,28,9,8,3,0,0,-1,0,0,0
1,52,51,3,0,0,0,0,0,64,0,-1--1--1,,1|(488,688)|
10,53,MISSING VAL 1,1050,345,49,9,8,3,0,0,-1,0,0,0
1,54,53,20,0,0,0,0,0,64,0,-1--1--1,,1|(989,353)|
10,55,VS PROD,975,310,32,9,8,3,0,0,-1,0,0,0
1,56,55,20,0,0,0,0,0,64,0,-1--1--1,,1|(951,332)|
10,57,VS ERR NONE,933,250,55,9,8,2,0,3,-1,0,0,0,128-128-128,0-0-0,|0||128-128-128
1,58,57,20,0,0,0,0,0,64,0,-1--1--1,,1|(926,300)|
10,59,VS ERR AT LEAST ONE,435,325,43,16,8,2,0,3,-1,0,0,0,128-128-128,0-0-0,|0||128-128-128
10,60,VS SUM,495,375,36,9,8,2,0,3,-1,0,0,0,128-128-128,0-0-0,|0||128-128-128
1,61,59,16,0,0,0,0,0,64,0,-1--1--1,,1|(406,359)|
1,62,60,16,0,0,0,0,0,64,0,-1--1--1,,1|(439,387)|
10,63,VS SUM,80,355,36,9,8,2,0,3,-1,0,0,0,128-128-128,0-0-0,|0||128-128-128
1,64,63,11,0,0,0,0,0,64,0,-1--1--1,,1|(124,373)|
10,65,VS ERR EXACTLY ONE,160,310,47,16,8,3,0,0,-1,0,0,0
1,66,65,11,0,0,0,0,0,64,0,-1--1--1,,1|(176,351)|
10,67,VS MIN,715,310,25,9,8,3,0,0,-1,0,0,0
1,68,67,27,0,0,0,0,0,64,0,-1--1--1,,1|(741,336)|
10,69,VS ERR NONE,768,275,55,9,8,2,0,3,-1,0,0,0,128-128-128,0-0-0,|0||128-128-128
1,70,69,27,0,0,0,0,0,64,0,-1--1--1,,1|(774,317)|
10,71,MISSING VAL 1,645,365,57,9,8,2,0,3,-1,0,0,0,128-128-128,0-0-0,|0||128-128-128
1,72,71,27,0,0,0,0,0,64,0,-1--1--1,,1|(717,372)|
10,73,count of neighbors,800,735,34,16,8,3,0,16,-1,0,0,0,0-0-0,0-0-0,|0|B|0-0-0
1,74,1,73,0,0,0,0,0,64,1,-1--1--1,,1|(679,714)|
1,75,5,73,1,0,0,0,0,64,1,-1--1--1,,1|(677,798)|
10,76,one edge,870,790,29,9,8,3,0,0,-1,0,0,0
1,77,76,73,0,0,0,0,0,64,1,-1--1--1,,1|(845,770)|
10,78,one neighbor,875,675,39,9,8,3,0,0,-1,0,0,0
1,79,78,73,0,0,0,0,0,64,1,-1--1--1,,1|(847,697)|
1,80,47,73,0,0,0,0,0,64,1,-1--1--1,,1|(715,753)|
1,81,49,73,0,0,0,0,0,64,1,-1--1--1,,1|(717,735)|
1,82,51,73,1,0,0,0,0,64,1,-1--1--1,,1|(639,677)|
12,83,0,170,85,117,32,8,135,0,18,-1,0,0,0,-1--1--1,0-0-0,|12|B|128-0-0
VECTOR SELECT - sum, product, min, max, average for arrays, with improved causal tracing and speed for sparse arrays
12,84,0,280,255,156,14,8,135,0,18,-1,0,0,0,-1--1--1,0-0-0,|12|B|128-0-0
Mapping from aggregate to detailed and back
12,85,0,855,215,91,15,8,135,0,18,-1,0,0,0,-1--1--1,0-0-0,|12|B|128-0-0
Task prerequisite mapping
12,86,0,610,575,208,17,8,135,0,18,-1,0,0,0,-1--1--1,0-0-0,|12|B|128-0-0
2-dimensional heat flow, with mapping of cell neighborhoods
10,87,input,535,80,16,9,8,3,0,0,0,0,0,0
10,88,selection,540,135,27,9,8,3,0,0,0,0,0,0
10,89,output,715,100,22,9,8,3,0,16,0,0,0,0,0-0-0,0-0-0,|0|B|0-0-0
12,90,0,620,45,48,9,8,135,0,18,-1,0,0,0,-1--1--1,0-0-0,|12|B|128-0-0
Generic usage
1,91,87,89,0,0,0,0,0,64,0,-1--1--1,,1|(615,88)|
1,92,88,89,0,0,0,0,0,64,0,-1--1--1,,1|(623,118)|
10,93,action,825,155,20,9,8,3,0,0,-1,0,0,0
1,94,93,89,0,0,0,0,0,64,0,-1--1--1,,1|(776,130)|
10,95,error setting,735,155,37,9,8,3,0,0,-1,0,0,0
1,96,95,89,0,0,0,0,0,64,0,-1--1--1,,1|(727,134)|
10,97,missing value,640,160,41,9,8,3,0,0,-1,0,0,0
1,98,97,89,0,0,0,0,0,64,0,-1--1--1,,1|(671,134)|
///---\\\
:L<%^E!@
1:VECTOR SELECT.vdf
9:VECTOR SELECT
22:$,Dollar,Dollars,$s
22:Day,Days
22:Hour,Hours
22:Month,Months
22:Person,People,Persons
22:Unit,Units
22:Week,Weeks
22:Year,Years
15:0,0,0,0,0,0
19:100,0
27:0,
34:0,
4:Time
5:effect of pollution deaths by age[Age]
35:Date
36:YYYY-MM-DD
37:2000
38:1
39:1
40:2
41:0
24:0
25:10
26:10
6:a1
6:ag1
6:left
6:t1
6:x1
6:x2
6:x3
6:x4
6:x5
6:y1
6:y2
6:y3
6:y4
6:y5
6:y6